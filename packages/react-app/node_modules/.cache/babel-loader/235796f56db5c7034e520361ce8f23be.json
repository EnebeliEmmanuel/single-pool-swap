{"ast":null,"code":"import _slicedToArray from\"/home/kokocodes/single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import SwapTab from\"./SwapTab\";import PoolTab from\"./PoolTab\";import{Button,Col,Menu,Row,List}from\"antd\";import{Redirect,Link,Route,Switch,useLocation,useHistory,useRouteMatch}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tabs=function Tabs(props){var page=props.page;var tx=props.tx;var writeContracts=props.writeContracts;var localProvider=props.localProvider;var mainnetProvider=props.mainnetProvider;var blockExplorer=props.blockExplorer;var address=props.address;var readContracts=props.readContracts;var contractConfig=props.contractConfig;var userSigner=props.signer;var price=props.price;var yourLocalBalance=props.yourLocalBalance;console.log(\"page variable = \".concat(page));var _useState=useState(\"page\"),_useState2=_slicedToArray(_useState,2),activeTab=_useState2[0],setActiveTab=_useState2[1];console.log(\"active tab = \".concat(activeTab));var ifPoolTabActive=activeTab===\"pool\"?true:false;var ifSwapTabActive=activeTab===\"swap\"?true:false;//when the route changes, update the active tab state variable to ensure that the correct tab is highlighted\nvar match=useRouteMatch(\"/:page\");useEffect(function(){//runs when path changes\nconsole.log(\"my matching function went at least\");if(match==null){// handle /app/ case\nsetActiveTab(\"swap\");}else{setActiveTab(match.params.page);}},[match]);//  Functions to handle Tab Switching\nvar handleSwapTab=function handleSwapTab(){// update the state to tab1\nsetActiveTab(\"swap\");};var handlePoolTab=function handlePoolTab(){// update the state to tab2\nsetActiveTab(\"pool\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tabNav\",children:[/*#__PURE__*/_jsx(Link,{to:\"/swap\",children:/*#__PURE__*/_jsx(\"span\",{onClick:handleSwapTab,children:/*#__PURE__*/_jsx(\"div\",{className:\"tabNavItem \".concat(ifSwapTabActive?\"activeTab\":\"\"),children:/*#__PURE__*/_jsx(\"p\",{children:\"Swap\"})})})}),/*#__PURE__*/_jsx(Link,{to:\"/pool\",children:/*#__PURE__*/_jsx(\"span\",{onClick:handlePoolTab,children:/*#__PURE__*/_jsx(\"div\",{className:\"tabNavItem \".concat(ifPoolTabActive?\"activeTab\":\"\"),children:/*#__PURE__*/_jsx(\"p\",{children:\"Pool\"})})})})]}),ifSwapTabActive?/*#__PURE__*/_jsx(SwapTab,{tx:tx,writeContracts:writeContracts,localProvider:localProvider,mainnetProvider:mainnetProvider,blockExplorer:blockExplorer,address:address//this is causing issues\n,readContracts:readContracts//this is causing issues\n,contractConfig:contractConfig,signer:userSigner,price:price,yourLocalBalance:yourLocalBalance}):/*#__PURE__*/_jsx(PoolTab,{tx:tx,writeContracts:writeContracts,localProvider:localProvider,mainnetProvider:mainnetProvider,blockExplorer:blockExplorer,address:address//this is causing issues\n,readContracts:readContracts//this is causing issues\n,contractConfig:contractConfig,signer:userSigner,price:price})]});};export default Tabs;","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/Tabs.jsx"],"names":["React","useState","useEffect","SwapTab","PoolTab","Button","Col","Menu","Row","List","Redirect","Link","Route","Switch","useLocation","useHistory","useRouteMatch","Tabs","props","page","tx","writeContracts","localProvider","mainnetProvider","blockExplorer","address","readContracts","contractConfig","userSigner","signer","price","yourLocalBalance","console","log","activeTab","setActiveTab","ifPoolTabActive","ifSwapTabActive","match","params","handleSwapTab","handlePoolTab"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SwapTab from \"./SwapTab\";\nimport PoolTab from \"./PoolTab\";\nimport { Button, Col, Menu, Row, List } from \"antd\";\nimport { Redirect, Link, Route, Switch, useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Tabs = props => {\n  const page = props.page;\n  const tx = props.tx;\n  const writeContracts = props.writeContracts;\n  const localProvider = props.localProvider;\n  const mainnetProvider = props.mainnetProvider;\n  const blockExplorer = props.blockExplorer;\n  const address = props.address;\n  const readContracts = props.readContracts;\n  const contractConfig = props.contractConfig;\n  const userSigner = props.signer;\n  const price = props.price;\n  const yourLocalBalance = props.yourLocalBalance;\n\n  console.log(`page variable = ${page}`);\n  const [activeTab, setActiveTab] = useState(\"page\");\n  console.log(`active tab = ${activeTab}`);\n\n\n  const ifPoolTabActive = activeTab === \"pool\" ? true : false;\n  const ifSwapTabActive = activeTab === \"swap\" ? true : false;\n\n  //when the route changes, update the active tab state variable to ensure that the correct tab is highlighted\n  let match = useRouteMatch(\"/:page\");\n  useEffect(() => {\n    //runs when path changes\n    console.log(\"my matching function went at least\");\n\n    if (match == null) {\n      // handle /app/ case\n      setActiveTab(\"swap\");\n    } else {\n      setActiveTab(match.params.page);\n    }\n  }, [match]);\n\n  //  Functions to handle Tab Switching\n  const handleSwapTab = () => {\n    // update the state to tab1\n    setActiveTab(\"swap\");\n  };\n  const handlePoolTab = () => {\n    // update the state to tab2\n    setActiveTab(\"pool\");\n  };\n\n\n  return (\n    <div className=\"tabs\">\n      <div className=\"tabNav\">\n        <Link to=\"/swap\">\n          <span onClick={handleSwapTab}>\n            <div className={`tabNavItem ${ifSwapTabActive ? \"activeTab\" : \"\"}`}>\n              <p>Swap</p>\n            </div>\n          </span>\n        </Link>\n\n        <Link to=\"/pool\">\n          <span onClick={handlePoolTab}>\n            <div className={`tabNavItem ${ifPoolTabActive ? \"activeTab\" : \"\"}`}>\n              <p>Pool</p>\n            </div>\n          </span>\n        </Link>\n      </div>\n\n      {ifSwapTabActive ? (\n        <SwapTab\n          tx={tx}\n          writeContracts={writeContracts}\n          localProvider={localProvider}\n          mainnetProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          address={address} //this is causing issues\n          readContracts={readContracts} //this is causing issues\n          contractConfig={contractConfig}\n          signer={userSigner}\n          price={price}\n          yourLocalBalance={yourLocalBalance}\n        />\n      ) : (\n        <PoolTab\n          tx={tx}\n          writeContracts={writeContracts}\n          localProvider={localProvider}\n          mainnetProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          address={address} //this is causing issues\n          readContracts={readContracts} //this is causing issues\n          contractConfig={contractConfig}\n          signer={userSigner}\n          price={price}\n        />\n      )}\n\n      {/* <Switch>\n        <Route exact path=\"/app\">\n          <Redirect to=\"/app/swap\" />\n        </Route>\n        <Route path=\"/app/swap\">\n          <SwapTab\n            tx={tx}\n            writeContracts={writeContracts}\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            address={address} //this is causing issues\n            readContracts={readContracts} //this is causing issues\n            contractConfig={contractConfig}\n            signer={userSigner}\n            price={price}\n            yourLocalBalance={yourLocalBalance}\n          />\n        </Route>\n        <Route path=\"/app/pool\">\n          <PoolTab\n            tx={tx}\n            writeContracts={writeContracts}\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            address={address} //this is causing issues\n            readContracts={readContracts} //this is causing issues\n            contractConfig={contractConfig}\n            signer={userSigner}\n            price={price}\n          />\n        </Route>\n      </Switch> */}\n    </div>\n  );\n};\nexport default Tabs;\n"]},"metadata":{},"sourceType":"module"}