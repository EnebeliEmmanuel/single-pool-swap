{"ast":null,"code":"var _jsxFileName = \"/home/kokocodes/single-pool-dex/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Redirect, Switch, useLocation, useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, NetworkDisplay, FaucetHint, NetworkSwitch, TokenBalance, Dex, Address, Balance, Events, AdvancedModeSwitch } from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\"; // contracts\n\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { ExampleUI, Hints, Subgraph, SimpleUI } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst initialNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\n\nconst USE_NETWORK_SELECTOR = false;\nconst web3Modal = Web3ModalSetup(); // üõ∞ providers\n\nconst providers = [\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\", `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, \"https://rpc.scaffoldeth.io:48544\"];\n\nfunction App(props) {\n  _s();\n\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const [advancedMode, setAdvancedMode] = useState(false);\n  const location = useLocation();\n  const targetNetwork = NETWORKS[selectedNetwork]; // üî≠ block explorer URL\n\n  const blockExplorer = targetNetwork.blockExplorer; // load all your providers\n\n  const localProvider = useStaticJsonRPC([process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`); // üõ∞ providers\n\n  if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // const contractConfig = useContractConfig();\n\n  const contractConfig = {\n    deployedContracts: deployedContracts || {},\n    externalContracts: externalContracts || {}\n  }; // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig);\n  const liquidity = useContractReader(readContracts, \"DEX\", \"getLiquidity\", [address]); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const purpose = useContractReader(readContracts, \"Balloons\", \"purpose\");\n  const history = useHistory();\n\n  const toggleAdvancedMode = advancedModeStatus => {\n    setAdvancedMode(advancedModeStatus);\n    history.push(\"/\");\n  };\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts, localChainId, myMainnetDAIBalance]);\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    }); // eslint-disable-next-line\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]); // const [route, setRoute] = useState();\n  // useEffect(() => {\n  //   setRoute(window.location.pathname);\n  // }, [setRoute]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1; // ** TODO: The events are not showing up! Left most of it commented out, but can uncomment and play with! Pretty sure you need to go into DEX.jsx as that is where most of the UI Home-page is being derived from. üòµ üìü Listen for broadcast events\n\n  const EthToTokenSwapEvents = useEventListener(readContracts, \"DEX\", \"EthToTokenSwap\", localProvider, 1);\n  console.log(\"‚ü† -->üéà EthToTokenSwapEvents:\", EthToTokenSwapEvents);\n  const TokenToEthSwapEvents = useEventListener(readContracts, \"DEX\", \"TokenToEthSwap\", localProvider, 1);\n  console.log(\"üéà-->‚ü† TokenToEthSwapEvents:\", TokenToEthSwapEvents); // const LiquidityProvidedEvents = useEventListener(readContracts, \"DEX\", \"LiquidityProvided\", 1);\n  // // console.log(\"‚ûï LiquidityProvidedEvents:\", LiquidityProvidedEvents);\n  // const LiquidityRemovedEvents = useEventListener(readContracts, \"DEX\", \"LiquidityRemoved\", 1);\n  // // console.log(\"‚ûñ LiquidityRemovedEvents:\", LiquidityRemovedEvents);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), advancedMode && /*#__PURE__*/_jsxDEV(NetworkDisplay, {\n      NETWORKCHECK: NETWORKCHECK,\n      localChainId: localChainId,\n      selectedChainId: selectedChainId,\n      targetNetwork: targetNetwork,\n      logoutOfWeb3Modal: logoutOfWeb3Modal,\n      USE_NETWORK_SELECTOR: USE_NETWORK_SELECTOR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), advancedMode && /*#__PURE__*/_jsxDEV(Menu, {\n      style: {\n        textAlign: \"center\",\n        marginTop: 40\n      },\n      selectedKeys: [location.pathname],\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/swap\",\n          children: \"Simple UI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, \"/\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, \"/home\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Events\",\n          children: \"Eventlist \\uD83D\\uDCDC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, \"/Events\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/debug\",\n          children: \"Debug Contracts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, \"/debug\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/hints\",\n          children: \"Hints\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, \"/hints\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/exampleui\",\n          children: \"ExampleUI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, \"/exampleui\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/mainnetdai\",\n          children: \"Mainnet DAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)\n      }, \"/mainnetdai\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/subgraph\",\n          children: \"Subgraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, \"/subgraph\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/swap\",\n        children: readContracts && readContracts.DEX && address && localProvider ? /*#__PURE__*/_jsxDEV(SimpleUI, {\n          page: \"swap\",\n          tx: tx,\n          writeContracts: writeContracts,\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          blockExplorer: blockExplorer,\n          address: address //this is causing issues\n          ,\n          readContracts: readContracts //this is causing issues\n          ,\n          contractConfig: contractConfig,\n          signer: userSigner,\n          price: price,\n          yourLocalBalance: yourLocalBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/pool\",\n        children: readContracts && readContracts.DEX && address && localProvider ? /*#__PURE__*/_jsxDEV(SimpleUI, {\n          page: \"pool\",\n          tx: tx,\n          writeContracts: writeContracts,\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          blockExplorer: blockExplorer,\n          address: address //this is causing issues\n          ,\n          readContracts: readContracts //this is causing issues\n          ,\n          contractConfig: contractConfig,\n          signer: userSigner,\n          yourLocalBalance: yourLocalBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/Home\",\n        children: readContracts && readContracts.DEX && address && localProvider ? /*#__PURE__*/_jsxDEV(Dex, {\n          tx: tx,\n          writeContracts: writeContracts,\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          blockExplorer: blockExplorer,\n          address: address //this is causing issues\n          ,\n          readContracts: readContracts //this is causing issues\n          ,\n          contractConfig: contractConfig,\n          signer: userSigner,\n          price: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Events\",\n        children: [/*#__PURE__*/_jsxDEV(Events, {\n          contracts: readContracts,\n          contractName: \"DEX\",\n          eventName: \"EthToTokenSwap\",\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          startBlock: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Events, {\n          contracts: readContracts,\n          contractName: \"DEX\",\n          eventName: \"TokenToEthSwap\",\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          startBlock: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Events, {\n          contracts: readContracts,\n          contractName: \"DEX\",\n          eventName: \"LiquidityProvided\",\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          startBlock: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Events, {\n          contracts: readContracts,\n          contractName: \"DEX\",\n          eventName: \"LiquidityRemoved\",\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          startBlock: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Events, {\n          contracts: readContracts,\n          contractName: \"Balloons\",\n          eventName: \"Approval\",\n          localProvider: localProvider,\n          mainnetProvider: mainnetProvider,\n          startBlock: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/debug\",\n        children: [/*#__PURE__*/_jsxDEV(Contract, {\n          name: \"DEX\",\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contract, {\n          name: \"Balloons\",\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/hints\",\n        children: /*#__PURE__*/_jsxDEV(Hints, {\n          address: address,\n          yourLocalBalance: yourLocalBalance,\n          mainnetProvider: mainnetProvider,\n          price: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exampleui\",\n        children: /*#__PURE__*/_jsxDEV(ExampleUI, {\n          address: address,\n          userSigner: userSigner,\n          mainnetProvider: mainnetProvider,\n          localProvider: localProvider,\n          yourLocalBalance: yourLocalBalance,\n          price: price,\n          tx: tx,\n          writeContracts: writeContracts,\n          readContracts: readContracts,\n          purpose: purpose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mainnetdai\",\n        children: /*#__PURE__*/_jsxDEV(Contract, {\n          name: \"DAI\",\n          customContract: mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI,\n          signer: userSigner,\n          provider: mainnetProvider,\n          address: address,\n          blockExplorer: \"https://etherscan.io/\",\n          contractConfig: contractConfig,\n          chainId: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/subgraph\",\n        children: /*#__PURE__*/_jsxDEV(Subgraph, {\n          subgraphUri: props.subgraphUri,\n          tx: tx,\n          writeContracts: writeContracts,\n          mainnetProvider: mainnetProvider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdvancedModeSwitch, {\n      isAdvancedMode: advancedMode,\n      advancedModeChanger: toggleAdvancedMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\"\n        },\n        children: [USE_NETWORK_SELECTOR && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(NetworkSwitch, {\n            networkOptions: networkOptions,\n            selectedNetwork: selectedNetwork,\n            setSelectedNetwork: setSelectedNetwork\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          isAdvancedMode: advancedMode,\n          useBurner: USE_BURNER_WALLET,\n          address: address,\n          localProvider: localProvider,\n          userSigner: userSigner,\n          mainnetProvider: mainnetProvider,\n          price: price,\n          web3Modal: web3Modal,\n          loadWeb3Modal: loadWeb3Modal,\n          logoutOfWeb3Modal: logoutOfWeb3Modal,\n          blockExplorer: blockExplorer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), advancedMode && yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && /*#__PURE__*/_jsxDEV(FaucetHint, {\n        localProvider: localProvider,\n        targetNetwork: targetNetwork,\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this), advancedMode && /*#__PURE__*/_jsxDEV(TokenBalance, {\n        name: \"Balloons\",\n        img: \"üéà\",\n        address: address,\n        contracts: readContracts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [advancedMode && \"üí¶üí¶:\", advancedMode && /*#__PURE__*/_jsxDEV(TokenBalance, {\n          balance: liquidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), FaucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [advancedMode && /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this), advancedMode && /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 19\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"43leBkhne/mFTZ4W0SHKowi7qbg=\", false, function () {\n  return [useLocation, useStaticJsonRPC, useStaticJsonRPC, useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractLoader, useContractReader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader, useHistory, useEventListener, useEventListener];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/App.jsx"],"names":["Button","Col","Menu","Row","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","React","useCallback","useEffect","useState","Link","Route","Redirect","Switch","useLocation","useHistory","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","NetworkDisplay","FaucetHint","NetworkSwitch","TokenBalance","Dex","Address","Balance","Events","AdvancedModeSwitch","NETWORKS","ALCHEMY_KEY","externalContracts","deployedContracts","Transactor","Web3ModalSetup","ExampleUI","Hints","Subgraph","SimpleUI","useStaticJsonRPC","useEventListener","ethers","require","initialNetwork","rinkeby","DEBUG","NETWORKCHECK","USE_BURNER_WALLET","USE_NETWORK_SELECTOR","web3Modal","providers","App","props","networkOptions","name","injectedProvider","setInjectedProvider","address","setAddress","selectedNetwork","setSelectedNetwork","advancedMode","setAdvancedMode","location","targetNetwork","blockExplorer","localProvider","process","env","REACT_APP_PROVIDER","rpcUrl","mainnetProvider","console","log","logoutOfWeb3Modal","clearCachedProvider","provider","disconnect","setTimeout","window","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","_network","chainId","selectedChainId","tx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","liquidity","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","purpose","history","toggleAdvancedMode","advancedModeStatus","push","utils","formatEther","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","faucetAvailable","connection","indexOf","EthToTokenSwapEvents","TokenToEthSwapEvents","textAlign","marginTop","pathname","DEX","contracts","DAI","subgraphUri","position","right","top","padding","display","flex","alignItems","marginRight","lte","BigNumber","from","left","bottom","opacity","open"],"mappings":"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","sourcesContent":["import { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Redirect, Switch, useLocation, useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n  TokenBalance,\n  Dex,\n  Address,\n  Balance,\n  Events,\n  AdvancedModeSwitch,\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { ExampleUI, Hints, Subgraph, SimpleUI } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst initialNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\nconst USE_NETWORK_SELECTOR = false;\n\nconst web3Modal = Web3ModalSetup();\n\n// üõ∞ providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const [advancedMode, setAdvancedMode] = useState(false);\n  const location = useLocation();\n\n  const targetNetwork = NETWORKS[selectedNetwork];\n\n  // üî≠ block explorer URL\n  const blockExplorer = targetNetwork.blockExplorer;\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n\n  // üõ∞ providers\n  if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n  const liquidity = useContractReader(readContracts, \"DEX\", \"getLiquidity\", [address]);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"Balloons\", \"purpose\");\n\n  const history = useHistory();\n\n  const toggleAdvancedMode = advancedModeStatus => {\n    setAdvancedMode(advancedModeStatus);\n    history.push(\"/\");\n  };\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n    localChainId,\n    myMainnetDAIBalance,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  // const [route, setRoute] = useState();\n  // useEffect(() => {\n  //   setRoute(window.location.pathname);\n  // }, [setRoute]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  // ** TODO: The events are not showing up! Left most of it commented out, but can uncomment and play with! Pretty sure you need to go into DEX.jsx as that is where most of the UI Home-page is being derived from. üòµ üìü Listen for broadcast events\n\n  const EthToTokenSwapEvents = useEventListener(readContracts, \"DEX\", \"EthToTokenSwap\", localProvider, 1);\n  console.log(\"‚ü† -->üéà EthToTokenSwapEvents:\", EthToTokenSwapEvents);\n  const TokenToEthSwapEvents = useEventListener(readContracts, \"DEX\", \"TokenToEthSwap\", localProvider, 1);\n  console.log(\"üéà-->‚ü† TokenToEthSwapEvents:\", TokenToEthSwapEvents);\n  // const LiquidityProvidedEvents = useEventListener(readContracts, \"DEX\", \"LiquidityProvided\", 1);\n  // // console.log(\"‚ûï LiquidityProvidedEvents:\", LiquidityProvidedEvents);\n  // const LiquidityRemovedEvents = useEventListener(readContracts, \"DEX\", \"LiquidityRemoved\", 1);\n  // // console.log(\"‚ûñ LiquidityRemovedEvents:\", LiquidityRemovedEvents);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {advancedMode && (\n        <NetworkDisplay\n          NETWORKCHECK={NETWORKCHECK}\n          localChainId={localChainId}\n          selectedChainId={selectedChainId}\n          targetNetwork={targetNetwork}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n        />\n      )}\n      {advancedMode && (\n        <Menu style={{ textAlign: \"center\", marginTop: 40 }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link to=\"/swap\">Simple UI</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/home\">\n            <Link to=\"/Home\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/Events\">\n            <Link to=\"/Events\">Eventlist üìú</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debug\">\n            <Link to=\"/debug\">Debug Contracts</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/hints\">\n            <Link to=\"/hints\">Hints</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/exampleui\">\n            <Link to=\"/exampleui\">ExampleUI</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/mainnetdai\">\n            <Link to=\"/mainnetdai\">Mainnet DAI</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/subgraph\">\n            <Link to=\"/subgraph\">Subgraph</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/swap\" />\n        </Route>\n        <Route path=\"/swap\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          {readContracts && readContracts.DEX && address && localProvider ? (\n            <SimpleUI\n              page=\"swap\"\n              tx={tx}\n              writeContracts={writeContracts}\n              localProvider={localProvider}\n              mainnetProvider={mainnetProvider}\n              blockExplorer={blockExplorer}\n              address={address} //this is causing issues\n              readContracts={readContracts} //this is causing issues\n              contractConfig={contractConfig}\n              signer={userSigner}\n              price={price}\n              yourLocalBalance={yourLocalBalance}\n            />\n          ) : (\n            \"\"\n          )}\n        </Route>\n        <Route path=\"/pool\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          {readContracts && readContracts.DEX && address && localProvider ? (\n            <SimpleUI\n              page=\"pool\"\n              tx={tx}\n              writeContracts={writeContracts}\n              localProvider={localProvider}\n              mainnetProvider={mainnetProvider}\n              blockExplorer={blockExplorer}\n              address={address} //this is causing issues\n              readContracts={readContracts} //this is causing issues\n              contractConfig={contractConfig}\n              signer={userSigner}\n              \n              yourLocalBalance={yourLocalBalance}\n            />\n          ) : (\n            \"\"\n          )}\n        </Route>\n        <Route exact path=\"/Home\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          {readContracts && readContracts.DEX && address && localProvider ? (\n            <Dex\n              tx={tx}\n              writeContracts={writeContracts}\n              localProvider={localProvider}\n              mainnetProvider={mainnetProvider}\n              blockExplorer={blockExplorer}\n              address={address} //this is causing issues\n              readContracts={readContracts} //this is causing issues\n              contractConfig={contractConfig}\n              signer={userSigner}\n              price={price}\n            />\n          ) : (\n            \"\"\n          )}\n          {/* TODO: The DEX.jsx file actually logs a bunch of the results so we think that instead of creating completely new event components (or whatever), we would figure out how to work with the txs that are happening as a result of EthersJS calling the respective functions in DEX.jsx. üòµ Lines 321-335 are an example of attempting to place emitted events on the front-page UI. It is not working though for now! */}\n          {/* <div style={{ width: 500, margin: \"auto\", marginTop: 64 }}>\n            <div>üëÄ DEX Events:</div>\n            <List\n              dataSource={EthToTokenSwapEvents}\n              renderItem={item => {\n                return (\n                  <List.Item key={item.blockNumber}>\n                    <Address value={item.args[0]} ensProvider={localProvider} fontSize={16} />\n                    <Balance tokenOutput={item.args[1]} />\n                    <Balance ethInput={item.args[2]} />\n                  </List.Item>\n                );\n              }}\n            />\n          </div> */}\n        </Route>\n        <Route path=\"/Events\">\n          <Events\n            contracts={readContracts}\n            contractName=\"DEX\"\n            eventName=\"EthToTokenSwap\"\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            startBlock={1}\n          />\n\n          <Events\n            contracts={readContracts}\n            contractName=\"DEX\"\n            eventName=\"TokenToEthSwap\"\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            startBlock={1}\n          />\n\n          <Events\n            contracts={readContracts}\n            contractName=\"DEX\"\n            eventName=\"LiquidityProvided\"\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            startBlock={1}\n          />\n\n          <Events\n            contracts={readContracts}\n            contractName=\"DEX\"\n            eventName=\"LiquidityRemoved\"\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            startBlock={1}\n          />\n\n<Events\n            contracts={readContracts}\n            contractName=\"Balloons\"\n            eventName=\"Approval\"\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            startBlock={1}\n          />\n        </Route>\n\n        <Route exact path=\"/debug\">\n          {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n          <Contract\n            name=\"DEX\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n\n          <Contract\n            name=\"Balloons\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n        </Route>\n        <Route path=\"/hints\">\n          <Hints\n            address={address}\n            yourLocalBalance={yourLocalBalance}\n            mainnetProvider={mainnetProvider}\n            price={price}\n          />\n        </Route>\n        <Route path=\"/exampleui\">\n          <ExampleUI\n            address={address}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            localProvider={localProvider}\n            yourLocalBalance={yourLocalBalance}\n            price={price}\n            tx={tx}\n            writeContracts={writeContracts}\n            readContracts={readContracts}\n            purpose={purpose}\n          />\n        </Route>\n        <Route path=\"/mainnetdai\">\n          <Contract\n            name=\"DAI\"\n            customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI}\n            signer={userSigner}\n            provider={mainnetProvider}\n            address={address}\n            blockExplorer=\"https://etherscan.io/\"\n            contractConfig={contractConfig}\n            chainId={1}\n          />\n          {/*\n            <Contract\n              name=\"UNI\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.UNI}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer=\"https://etherscan.io/\"\n            />\n            */}\n        </Route>\n        <Route path=\"/subgraph\">\n          <Subgraph\n            subgraphUri={props.subgraphUri}\n            tx={tx}\n            writeContracts={writeContracts}\n            mainnetProvider={mainnetProvider}\n          />\n        </Route>\n      </Switch>\n\n      <AdvancedModeSwitch isAdvancedMode={advancedMode} advancedModeChanger={toggleAdvancedMode} />\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <div style={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n          {USE_NETWORK_SELECTOR && (\n            <div style={{ marginRight: 20 }}>\n              <NetworkSwitch\n                networkOptions={networkOptions}\n                selectedNetwork={selectedNetwork}\n                setSelectedNetwork={setSelectedNetwork}\n              />\n            </div>\n          )}\n          <Account\n            isAdvancedMode={advancedMode}\n            useBurner={USE_BURNER_WALLET}\n            address={address}\n            localProvider={localProvider}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            price={price}\n            web3Modal={web3Modal}\n            loadWeb3Modal={loadWeb3Modal}\n            logoutOfWeb3Modal={logoutOfWeb3Modal}\n            blockExplorer={blockExplorer}\n          />\n        </div>\n\n        {advancedMode && yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && (\n          <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n        )}\n\n        {advancedMode && <TokenBalance name={\"Balloons\"} img={\"üéà\"} address={address} contracts={readContracts} />}\n        <h3>\n          {advancedMode && \"üí¶üí¶:\"}\n          {advancedMode && <TokenBalance balance={liquidity} />}\n        </h3>\n        {FaucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        {advancedMode && (\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={8}>\n              <Ramp price={price} address={address} networks={NETWORKS} />\n            </Col>\n\n            <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n              <GasGauge gasPrice={gasPrice} />\n            </Col>\n            <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n              <Button\n                onClick={() => {\n                  window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n                }}\n                size=\"large\"\n                shape=\"round\"\n              >\n                <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                  üí¨\n                </span>\n                Support\n              </Button>\n            </Col>\n          </Row>\n        )}\n\n        {advancedMode && (\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={24}>\n              {\n                /*  if the local provider has a signer, let's show the faucet:  */\n                faucetAvailable ? (\n                  <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n                ) : (\n                  \"\"\n                )\n              }\n            </Col>\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}