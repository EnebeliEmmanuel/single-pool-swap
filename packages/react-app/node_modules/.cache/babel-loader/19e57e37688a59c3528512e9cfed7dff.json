{"ast":null,"code":"import{Skeleton,Typography}from\"antd\";import React from\"react\";import Blockies from\"react-blockies\";import{useThemeSwitcher}from\"react-css-theme-switcher\";import{useLookupAddress}from\"eth-hooks/dapps/ens\";// changed value={address} to address={address}\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Text=Typography.Text;var blockExplorerLink=function blockExplorerLink(address,blockExplorer){return\"\".concat(blockExplorer||\"https://etherscan.io/\",\"address/\").concat(address);};export default function Address(props){var _useThemeSwitcher=useThemeSwitcher(),currentTheme=_useThemeSwitcher.currentTheme;var isAdvancedMode=props.isAdvancedMode;var address=props.value||props.address;var ens=useLookupAddress(props.ensProvider,address);var ensSplit=ens&&ens.split(\".\");var validEnsCheck=ensSplit&&ensSplit[ensSplit.length-1]===\"eth\";var etherscanLink=blockExplorerLink(address,props.blockExplorer);var displayAddress=(address===null||address===void 0?void 0:address.substr(0,5))+\"...\"+(address===null||address===void 0?void 0:address.substr(-4));if(validEnsCheck){displayAddress=ens;}else if(props.size===\"short\"){displayAddress+=\"...\"+address.substr(-4);}else if(props.size===\"long\"){displayAddress=address;}if(!address){return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Skeleton,{avatar:true,paragraph:{rows:1}})});}if(props.minimized){return/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"middle\"},children:/*#__PURE__*/_jsx(\"a\",{style:{color:currentTheme===\"light\"?\"#222222\":\"#ddd\"},target:\"_blank\",href:etherscanLink,rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(Blockies,{seed:address.toLowerCase(),size:8,scale:2})})});}return/*#__PURE__*/_jsxs(\"span\",{children:[isAdvancedMode&&/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"middle\"},children:/*#__PURE__*/_jsx(Blockies,{seed:address.toLowerCase(),size:8,scale:props.fontSize?props.fontSize/7:4})}),/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"middle\",paddingLeft:5,fontSize:props.fontSize?props.fontSize:28},children:props.onChange?/*#__PURE__*/_jsx(Text,{editable:{onChange:props.onChange},copyable:isAdvancedMode&&{text:address},children:/*#__PURE__*/_jsx(\"a\",{style:{color:currentTheme===\"light\"?\"#222222\":\"#ddd\"},target:\"_blank\",href:etherscanLink,rel:\"noopener noreferrer\",children:displayAddress})}):/*#__PURE__*/_jsx(Text,{copyable:isAdvancedMode&&{text:address},children:/*#__PURE__*/_jsx(\"a\",{style:{color:currentTheme===\"light\"?\"#222222\":\"#ddd\"},target:\"_blank\",href:etherscanLink,rel:\"noopener noreferrer\",children:displayAddress})})})]});}","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/Address.jsx"],"names":["Skeleton","Typography","React","Blockies","useThemeSwitcher","useLookupAddress","Text","blockExplorerLink","address","blockExplorer","Address","props","currentTheme","isAdvancedMode","value","ens","ensProvider","ensSplit","split","validEnsCheck","length","etherscanLink","displayAddress","substr","size","rows","minimized","verticalAlign","color","toLowerCase","fontSize","paddingLeft","onChange","text"],"mappings":"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","sourcesContent":["import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}address/${address}`;\n\nexport default function Address(props) {\n  const { currentTheme } = useThemeSwitcher();\n  const isAdvancedMode = props.isAdvancedMode;\n  const address = props.value || props.address;\n  const ens = useLookupAddress(props.ensProvider, address);\n  const ensSplit = ens && ens.split(\".\");\n  const validEnsCheck = ensSplit && ensSplit[ensSplit.length - 1] === \"eth\";\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  let displayAddress = address?.substr(0, 5) + \"...\" + address?.substr(-4);\n\n  if (validEnsCheck) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  return (\n    <span>\n      {isAdvancedMode && <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>}\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {props.onChange ? (\n          <Text editable={{ onChange: props.onChange }} copyable={ isAdvancedMode && { text: address }}>\n            <a\n              style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n              target=\"_blank\"\n              href={etherscanLink}\n              rel=\"noopener noreferrer\"\n            >\n              {displayAddress}\n            </a>\n          </Text>\n        ) : (\n          <Text copyable={isAdvancedMode && { text: address }}>\n            <a\n              style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n              target=\"_blank\"\n              href={etherscanLink}\n              rel=\"noopener noreferrer\"\n            >\n              {displayAddress}\n            </a>\n          </Text>\n        )}\n      </span>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}