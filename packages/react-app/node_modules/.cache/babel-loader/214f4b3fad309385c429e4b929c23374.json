{"ast":null,"code":"import _regeneratorRuntime from\"/home/kokocodes/single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kokocodes/single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kokocodes/single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ethers}from\"ethers\";import React,{useState,useEffect}from\"react\";import SwapFormRow from\"./SwapFormRow\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var contractName=\"DEX\";var tokenName=\"Balloons\";export default function SwapTab(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),liquidityError=_useState2[0],setLiquidityError=_useState2[1];var tx=props.tx;var writeContracts=props.writeContracts;var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),fromEth=_useState4[0],setFromEth=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currentEthValue=_useState6[0],setCurrentEthValue=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),currentBalloonsValue=_useState8[0],setCurrentBalloonsValue=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),ethFixed=_useState10[0],setEthFixed=_useState10[1];useEffect(function(){//runs when swap direction changes or text fields are changed to calculate prices\nupdatePriceCalculations();},[fromEth,ethFixed,currentEthValue,currentBalloonsValue]);var updatePriceCalculations=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fixedValue,fixedValueInEther,calculatedPrice,formattedPrice;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://calculate the floating price as required based on fromEth and ethFixed\nfixedValue=ethFixed?currentEthValue:currentBalloonsValue;//handle blank input box\nif(!(fixedValue==\"\")){_context.next=7;break;}setCurrentBalloonsValue(\"\");setCurrentEthValue(\"\");console.log(\"not calculating price with blank input\");_context.next=50;break;case 7:fixedValueInEther=ethers.utils.parseEther(\"\"+fixedValue);calculatedPrice=0;if(!fromEth){_context.next=30;break;}if(!ethFixed){_context.next=16;break;}_context.next=13;return props.readContracts[contractName].estimateEthToToken(fixedValueInEther);case 13:calculatedPrice=_context.sent;_context.next=28;break;case 16:_context.prev=16;_context.next=19;return props.readContracts[contractName].estimateEthRequiredForTokens(fixedValueInEther);case 19:calculatedPrice=_context.sent;setLiquidityError(false);_context.next=28;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](16);console.log(_context.t0);console.log(\"not enough Ballons liquidity\");setLiquidityError(true);case 28:_context.next=48;break;case 30:if(!ethFixed){_context.next=45;break;}_context.prev=31;_context.next=34;return props.readContracts[contractName].estimateTokensRequiredForEth(fixedValueInEther);case 34:calculatedPrice=_context.sent;setLiquidityError(false);_context.next=43;break;case 38:_context.prev=38;_context.t1=_context[\"catch\"](31);console.log(_context.t1);console.log(\"not enough Eth liquidity\");setLiquidityError(true);case 43:_context.next=48;break;case 45:_context.next=47;return props.readContracts[contractName].estimateTokenToEth(fixedValueInEther);case 47:calculatedPrice=_context.sent;case 48:formattedPrice=(Math.round(ethers.utils.formatEther(calculatedPrice)*100)/100).toFixed(2);//the value should probably only be rounded in the UI rather than rounding the actual value\nethFixed==true?setCurrentBalloonsValue(formattedPrice):setCurrentEthValue(formattedPrice);case 50:case\"end\":return _context.stop();}}},_callee,null,[[16,23],[31,38]]);}));return function updatePriceCalculations(){return _ref.apply(this,arguments);};}();var switchDirection=function switchDirection(e){e.preventDefault();setFromEth(!fromEth);setLiquidityError(false);};var handleSwapButton=function handleSwapButton(e){e.preventDefault();var zeroError=false;if(currentEthValue==0||currentEthValue==\"\"){zeroError=true;}if(!liquidityError&!zeroError){fromEth==true?swapEthToToken(currentEthValue):swapTokenToEth(currentBalloonsValue);}};var swapEthToToken=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value){var valueInEther,swapEthToTokenResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"Swapping...\");valueInEther=ethers.utils.parseEther(\"\"+value);_context2.next=4;return tx(writeContracts[contractName][\"ethToToken\"]({value:valueInEther}));case 4:swapEthToTokenResult=_context2.sent;console.log(\"swapEthToTokenResult:\",swapEthToTokenResult);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function swapEthToToken(_x){return _ref2.apply(this,arguments);};}();var swapTokenToEth=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value){var valueInEther,allowance,approveTx,swapTx,approveTxResult,swapTxResult;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:valueInEther=ethers.utils.parseEther(\"\"+value);console.log(\"valueInEther\",valueInEther);_context3.next=4;return props.readContracts[tokenName].allowance(props.address,props.readContracts[contractName].address);case 4:allowance=_context3.sent;console.log(\"allowance\",allowance);if(!allowance.lt(valueInEther)){_context3.next=10;break;}_context3.next=9;return tx(writeContracts[tokenName].approve(props.readContracts[contractName].address,valueInEther,{gasLimit:200000}));case 9:approveTx=_context3.sent;case 10:swapTx=tx(writeContracts[contractName][\"tokenToEth\"](valueInEther,{gasLimit:200000}));if(!approveTx){_context3.next=17;break;}console.log(\"waiting on approve to finish...\");_context3.next=15;return approveTx;case 15:approveTxResult=_context3.sent;console.log(\"approveTxResult:\",approveTxResult);case 17:_context3.next=19;return swapTx;case 19:swapTxResult=_context3.sent;console.log(\"swapTxResult:\",swapTxResult);case 21:case\"end\":return _context3.stop();}}},_callee3);}));return function swapTokenToEth(_x2){return _ref3.apply(this,arguments);};}();var theme=window.localStorage.getItem(\"theme\");//handle change of text in ETH input\nvar setEthValue=function setEthValue(value){setCurrentEthValue(value);setEthFixed(true);};//handle change of text in ballons input\nvar setBaloonsValue=function setBaloonsValue(value){setCurrentBalloonsValue(value);setEthFixed(false);};return/*#__PURE__*/_jsx(\"div\",{className:\"simple-ui-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(SwapFormRow,{contracts:props.readContracts,address:props.address,asset:fromEth?\"ether\":\"balloons\",changeValueFunction:fromEth?setEthValue:setBaloonsValue,value:fromEth?currentEthValue:currentBalloonsValue,yourLocalBalance:props.yourLocalBalance}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return switchDirection(e);},id:\"swap-direction-button\",children:\"\\u2B07\"}),/*#__PURE__*/_jsx(SwapFormRow,{contracts:props.readContracts,address:props.address,asset:fromEth?\"balloons\":\"ether\",changeValueFunction:fromEth?setBaloonsValue:setEthValue,value:fromEth?currentBalloonsValue:currentEthValue,yourLocalBalance:props.yourLocalBalance}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return handleSwapButton(e);},id:\"execute-swap-button\",className:liquidityError?\"liquidity-error-btn\":\"execute-swap-btn\"// style={{ background: `${liquidityError ? \"red\" : '#252149' }` }}\n,children:liquidityError?\"Not enough liquidity\":\"Swap\"})]})});}","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/SwapTab.jsx"],"names":["ethers","React","useState","useEffect","SwapFormRow","contractName","tokenName","SwapTab","props","liquidityError","setLiquidityError","tx","writeContracts","fromEth","setFromEth","currentEthValue","setCurrentEthValue","currentBalloonsValue","setCurrentBalloonsValue","ethFixed","setEthFixed","updatePriceCalculations","fixedValue","console","log","fixedValueInEther","utils","parseEther","calculatedPrice","readContracts","estimateEthToToken","estimateEthRequiredForTokens","estimateTokensRequiredForEth","estimateTokenToEth","formattedPrice","Math","round","formatEther","toFixed","switchDirection","e","preventDefault","handleSwapButton","zeroError","swapEthToToken","swapTokenToEth","value","valueInEther","swapEthToTokenResult","allowance","address","lt","approve","gasLimit","approveTx","swapTx","approveTxResult","swapTxResult","theme","window","localStorage","getItem","setEthValue","setBaloonsValue","yourLocalBalance"],"mappings":"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","sourcesContent":["import { ethers } from \"ethers\";\nimport React, { useState, useEffect } from \"react\";\nimport SwapFormRow from \"./SwapFormRow\";\n\nconst contractName = \"DEX\";\nconst tokenName = \"Balloons\";\n\nexport default function SwapTab(props) {\n\n  const [liquidityError, setLiquidityError] = useState(false);\n\n  const tx = props.tx;\n\n  const writeContracts = props.writeContracts;\n\n  const [fromEth, setFromEth] = useState(true);\n  const [currentEthValue, setCurrentEthValue] = useState(\"\");\n  const [currentBalloonsValue, setCurrentBalloonsValue] = useState(\"\");\n  const [ethFixed, setEthFixed] = useState(true);\n\n  useEffect(() => {\n    //runs when swap direction changes or text fields are changed to calculate prices\n\n    updatePriceCalculations();\n  }, [fromEth, ethFixed, currentEthValue, currentBalloonsValue]);\n\n  const updatePriceCalculations = async () => {\n    //calculate the floating price as required based on fromEth and ethFixed\n\n    let fixedValue = ethFixed ? currentEthValue : currentBalloonsValue;\n\n    //handle blank input box\n    if (fixedValue == \"\") {\n      setCurrentBalloonsValue(\"\");\n      setCurrentEthValue(\"\");\n      console.log(\"not calculating price with blank input\");\n    } else {\n      let fixedValueInEther = ethers.utils.parseEther(\"\" + fixedValue);\n      let calculatedPrice = 0;\n      if (fromEth) {\n        if (ethFixed) {\n          calculatedPrice = await props.readContracts[contractName].estimateEthToToken(fixedValueInEther);\n        } else {\n          try {\n            calculatedPrice = await props.readContracts[contractName].estimateEthRequiredForTokens(fixedValueInEther);\n            setLiquidityError(false);\n          } catch (e) {\n            console.log(e);\n            console.log(\"not enough Ballons liquidity\");\n\n            setLiquidityError(true);\n          }\n        }\n      } else {\n        if (ethFixed) {\n          try {\n            calculatedPrice = await props.readContracts[contractName].estimateTokensRequiredForEth(fixedValueInEther);\n            setLiquidityError(false);\n          } catch (e) {\n            console.log(e);\n            console.log(\"not enough Eth liquidity\");\n            setLiquidityError(true);\n          }\n        } else {\n          calculatedPrice = await props.readContracts[contractName].estimateTokenToEth(fixedValueInEther);\n        }\n      }\n      let formattedPrice = (Math.round(ethers.utils.formatEther(calculatedPrice) * 100) / 100).toFixed(2);\n      //the value should probably only be rounded in the UI rather than rounding the actual value\n      ethFixed == true ? setCurrentBalloonsValue(formattedPrice) : setCurrentEthValue(formattedPrice);\n    }\n  };\n\n  const switchDirection = e => {\n    e.preventDefault();\n    setFromEth(!fromEth);\n    setLiquidityError(false);\n  };\n  const handleSwapButton = e => {\n    e.preventDefault();\n    let zeroError = false;\n    if (currentEthValue == 0 || currentEthValue == \"\") {\n      zeroError = true;\n    }\n    if (!liquidityError & !zeroError) {\n      fromEth == true ? swapEthToToken(currentEthValue) : swapTokenToEth(currentBalloonsValue);\n    }\n  };\n\n  const swapEthToToken = async value => {\n    console.log(\"Swapping...\");\n    let valueInEther = ethers.utils.parseEther(\"\" + value);\n    let swapEthToTokenResult = await tx(writeContracts[contractName][\"ethToToken\"]({ value: valueInEther }));\n    console.log(\"swapEthToTokenResult:\", swapEthToTokenResult);\n  };\n\n  const swapTokenToEth = async value => {\n    let valueInEther = ethers.utils.parseEther(\"\" + value);\n    console.log(\"valueInEther\", valueInEther);\n    let allowance = await props.readContracts[tokenName].allowance(\n      props.address,\n      props.readContracts[contractName].address,\n    );\n    console.log(\"allowance\", allowance);\n\n    let approveTx;\n    if (allowance.lt(valueInEther)) {\n      approveTx = await tx(\n        writeContracts[tokenName].approve(props.readContracts[contractName].address, valueInEther, {\n          gasLimit: 200000,\n        }),\n      );\n    }\n\n    let swapTx = tx(writeContracts[contractName][\"tokenToEth\"](valueInEther, { gasLimit: 200000 }));\n    if (approveTx) {\n      console.log(\"waiting on approve to finish...\");\n      let approveTxResult = await approveTx;\n      console.log(\"approveTxResult:\", approveTxResult);\n    }\n    let swapTxResult = await swapTx;\n    console.log(\"swapTxResult:\", swapTxResult);\n  };\n\n  const theme = window.localStorage.getItem(\"theme\");\n\n  //handle change of text in ETH input\n  const setEthValue = value => {\n    setCurrentEthValue(value);\n    setEthFixed(true);\n  };\n\n  //handle change of text in ballons input\n  const setBaloonsValue = value => {\n    setCurrentBalloonsValue(value);\n    setEthFixed(false);\n  };\n\n  return (\n    <div className=\"simple-ui-card\">\n      \n      <div className=\"form-group\">\n        <SwapFormRow\n        contracts={props.readContracts}\n        address={props.address}\n          asset={fromEth ? \"ether\" : \"balloons\"}\n          changeValueFunction={fromEth ? setEthValue : setBaloonsValue}\n          value={fromEth ? currentEthValue : currentBalloonsValue}\n          yourLocalBalance={props.yourLocalBalance}\n        />\n\n        <button onClick={e => switchDirection(e)} id=\"swap-direction-button\">\n          ⬇\n        </button>\n\n        <SwapFormRow\n        contracts={props.readContracts}\n        address={props.address}\n          asset={fromEth ? \"balloons\" : \"ether\"}\n          changeValueFunction={fromEth ? setBaloonsValue : setEthValue}\n          value={fromEth ? currentBalloonsValue : currentEthValue}\n          yourLocalBalance={props.yourLocalBalance}\n        />\n        <button\n          onClick={e => handleSwapButton(e)}\n          id=\"execute-swap-button\"\n          className={liquidityError ? \"liquidity-error-btn\" : \"execute-swap-btn\" }\n          // style={{ background: `${liquidityError ? \"red\" : '#252149' }` }}\n        >\n          {liquidityError ? \"Not enough liquidity\" : \"Swap\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}