{"ast":null,"code":"var _jsxFileName = \"/home/kokocodes/single-pool-dex/packages/react-app/src/components/Tabs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SwapTab from \"./SwapTab\";\nimport PoolTab from \"./PoolTab\";\nimport { Button, Col, Menu, Row, List } from \"antd\";\nimport { Redirect, Link, Route, Switch, useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tabs = props => {\n  _s();\n\n  const page = props.page;\n  const tx = props.tx;\n  const writeContracts = props.writeContracts;\n  const localProvider = props.localProvider;\n  const mainnetProvider = props.mainnetProvider;\n  const blockExplorer = props.blockExplorer;\n  const address = props.address;\n  const readContracts = props.readContracts;\n  const contractConfig = props.contractConfig;\n  const userSigner = props.signer;\n  const price = props.price;\n  const yourLocalBalance = props.yourLocalBalance;\n  console.log(`page variable = ${page}`);\n  const [activeTab, setActiveTab] = useState(\"page\");\n  console.log(`active tab = ${activeTab}`);\n  const ifPoolTabActive = activeTab === \"pool\" ? true : false;\n  const ifSwapTabActive = activeTab === \"swap\" ? true : false; //when the route changes, update the active tab state variable to ensure that the correct tab is highlighted\n\n  let match = useRouteMatch(\"/:page\");\n  useEffect(() => {\n    //runs when path changes\n    console.log(\"my matching function went at least\");\n\n    if (match == null) {\n      // handle /app/ case\n      setActiveTab(\"swap\");\n    } else {\n      setActiveTab(match.params.page);\n    }\n  }, [match]); //  Functions to handle Tab Switching\n\n  const handleSwapTab = () => {\n    // update the state to tab1\n    setActiveTab(\"swap\");\n  };\n\n  const handlePoolTab = () => {\n    // update the state to tab2\n    setActiveTab(\"pool\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabNav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/swap\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleSwapTab,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tabNavItem ${ifSwapTabActive ? \"activeTab\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/pool\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handlePoolTab,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tabNavItem ${ifPoolTabActive ? \"activeTab\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Pool\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), ifSwapTabActive ? /*#__PURE__*/_jsxDEV(SwapTab, {\n      tx: tx,\n      writeContracts: writeContracts,\n      localProvider: localProvider,\n      mainnetProvider: mainnetProvider,\n      blockExplorer: blockExplorer,\n      address: address //this is causing issues\n      ,\n      readContracts: readContracts //this is causing issues\n      ,\n      contractConfig: contractConfig,\n      signer: userSigner,\n      price: price,\n      yourLocalBalance: yourLocalBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PoolTab, {\n      tx: tx,\n      writeContracts: writeContracts,\n      localProvider: localProvider,\n      mainnetProvider: mainnetProvider,\n      blockExplorer: blockExplorer,\n      address: address //this is causing issues\n      ,\n      readContracts: readContracts //this is causing issues\n      ,\n      contractConfig: contractConfig,\n      signer: userSigner,\n      price: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tabs, \"gE19cy3JgLPMANIXkVGCfOwEFQc=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Tabs;\nexport default Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/Tabs.jsx"],"names":["React","useState","useEffect","SwapTab","PoolTab","Button","Col","Menu","Row","List","Redirect","Link","Route","Switch","useLocation","useHistory","useRouteMatch","Tabs","props","page","tx","writeContracts","localProvider","mainnetProvider","blockExplorer","address","readContracts","contractConfig","userSigner","signer","price","yourLocalBalance","console","log","activeTab","setActiveTab","ifPoolTabActive","ifSwapTabActive","match","params","handleSwapTab","handlePoolTab"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SwapTab from \"./SwapTab\";\nimport PoolTab from \"./PoolTab\";\nimport { Button, Col, Menu, Row, List } from \"antd\";\nimport { Redirect, Link, Route, Switch, useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Tabs = props => {\n  const page = props.page;\n  const tx = props.tx;\n  const writeContracts = props.writeContracts;\n  const localProvider = props.localProvider;\n  const mainnetProvider = props.mainnetProvider;\n  const blockExplorer = props.blockExplorer;\n  const address = props.address;\n  const readContracts = props.readContracts;\n  const contractConfig = props.contractConfig;\n  const userSigner = props.signer;\n  const price = props.price;\n  const yourLocalBalance = props.yourLocalBalance;\n\n  console.log(`page variable = ${page}`);\n  const [activeTab, setActiveTab] = useState(\"page\");\n  console.log(`active tab = ${activeTab}`);\n\n\n  const ifPoolTabActive = activeTab === \"pool\" ? true : false;\n  const ifSwapTabActive = activeTab === \"swap\" ? true : false;\n\n  //when the route changes, update the active tab state variable to ensure that the correct tab is highlighted\n  let match = useRouteMatch(\"/:page\");\n  useEffect(() => {\n    //runs when path changes\n    console.log(\"my matching function went at least\");\n\n    if (match == null) {\n      // handle /app/ case\n      setActiveTab(\"swap\");\n    } else {\n      setActiveTab(match.params.page);\n    }\n  }, [match]);\n\n  //  Functions to handle Tab Switching\n  const handleSwapTab = () => {\n    // update the state to tab1\n    setActiveTab(\"swap\");\n  };\n  const handlePoolTab = () => {\n    // update the state to tab2\n    setActiveTab(\"pool\");\n  };\n\n\n  return (\n    <div className=\"tabs\">\n      <div className=\"tabNav\">\n        <Link to=\"/swap\">\n          <span onClick={handleSwapTab}>\n            <div className={`tabNavItem ${ifSwapTabActive ? \"activeTab\" : \"\"}`}>\n              <p>Swap</p>\n            </div>\n          </span>\n        </Link>\n\n        <Link to=\"/pool\">\n          <span onClick={handlePoolTab}>\n            <div className={`tabNavItem ${ifPoolTabActive ? \"activeTab\" : \"\"}`}>\n              <p>Pool</p>\n            </div>\n          </span>\n        </Link>\n      </div>\n\n      {ifSwapTabActive ? (\n        <SwapTab\n          tx={tx}\n          writeContracts={writeContracts}\n          localProvider={localProvider}\n          mainnetProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          address={address} //this is causing issues\n          readContracts={readContracts} //this is causing issues\n          contractConfig={contractConfig}\n          signer={userSigner}\n          price={price}\n          yourLocalBalance={yourLocalBalance}\n        />\n      ) : (\n        <PoolTab\n          tx={tx}\n          writeContracts={writeContracts}\n          localProvider={localProvider}\n          mainnetProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          address={address} //this is causing issues\n          readContracts={readContracts} //this is causing issues\n          contractConfig={contractConfig}\n          signer={userSigner}\n          price={price}\n        />\n      )}\n\n      {/* <Switch>\n        <Route exact path=\"/app\">\n          <Redirect to=\"/app/swap\" />\n        </Route>\n        <Route path=\"/app/swap\">\n          <SwapTab\n            tx={tx}\n            writeContracts={writeContracts}\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            address={address} //this is causing issues\n            readContracts={readContracts} //this is causing issues\n            contractConfig={contractConfig}\n            signer={userSigner}\n            price={price}\n            yourLocalBalance={yourLocalBalance}\n          />\n        </Route>\n        <Route path=\"/app/pool\">\n          <PoolTab\n            tx={tx}\n            writeContracts={writeContracts}\n            localProvider={localProvider}\n            mainnetProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            address={address} //this is causing issues\n            readContracts={readContracts} //this is causing issues\n            contractConfig={contractConfig}\n            signer={userSigner}\n            price={price}\n          />\n        </Route>\n      </Switch> */}\n    </div>\n  );\n};\nexport default Tabs;\n"]},"metadata":{},"sourceType":"module"}