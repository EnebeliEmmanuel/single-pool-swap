{"ast":null,"code":"var _jsxFileName = \"/home/kokocodes/single-pool-dex/packages/react-app/src/components/PoolTab.jsx\",\n    _s = $RefreshSig$();\n\nimport { ethers } from \"ethers\";\nimport React, { useState, useEffect } from \"react\";\nimport PoolFormRow from \"./PoolFormRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractName = \"DEX\";\nconst tokenName = \"Balloons\";\nexport default function PoolTab(props) {\n  _s();\n\n  const tx = props.tx;\n  const writeContracts = props.writeContracts;\n  const [liquidityAmount, setLiquidityAmount] = useState(\"\");\n  const [addingLiquidity, setAddingLiquidity] = useState(true);\n  const [addressApproved, setAddressApproved] = useState(true);\n\n  const changeAddLiquidity = async value => {\n    let valuePlusExtra = ethers.utils.parseEther(\"\" + value * 1.03);\n    let allowance = await props.readContracts[tokenName].allowance(props.address, props.readContracts[contractName].address);\n    setLiquidityAmount(value);\n    setAddingLiquidity(true);\n\n    if (allowance.lt(valuePlusExtra)) {\n      setAddressApproved(false);\n    } else {\n      setAddressApproved(true);\n    }\n  };\n\n  const changeWithdrawLiquidity = value => {\n    setLiquidityAmount(value);\n    setAddingLiquidity(false);\n  };\n\n  const depositLiquidity = async value => {\n    console.log(`Depositing ${liquidityAmount} of liquidity`);\n    let valueInEther = ethers.utils.parseEther(\"\" + value);\n    await tx(writeContracts[contractName][\"deposit\"]({\n      value: valueInEther,\n      gasLimit: 200000\n    }));\n    setLiquidityAmount(\"\");\n  };\n\n  const withdrawLiquidity = async value => {\n    console.log(`Withdrawing ${liquidityAmount} of liquidity`);\n    let valueInEther = ethers.utils.parseEther(\"\" + value);\n    let withdrawTxResult = await tx(writeContracts[contractName][\"withdraw\"](valueInEther));\n    console.log(\"withdrawTxResult:\", withdrawTxResult);\n    setLiquidityAmount(\"\");\n  };\n\n  const approveDeposit = async value => {\n    console.log(`Approving ${liquidityAmount} to be spent`);\n    let valuePlusExtra = ethers.utils.parseEther(\"\" + value * 1.03);\n    await tx(writeContracts[tokenName].approve(props.readContracts[contractName].address, valuePlusExtra, {\n      gasLimit: 200000\n    }));\n    setAddressApproved(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-ui-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-heading\",\n        children: \" Add Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoolFormRow, {\n        changeValueFunction: changeAddLiquidity,\n        value: addingLiquidity == true ? liquidityAmount : \"\",\n        approvalNeeded: !addressApproved,\n        executeFunction: depositLiquidity,\n        approvalFunction: approveDeposit,\n        buttonLabel: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-heading\",\n        children: \" Withdraw Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoolFormRow, {\n        changeValueFunction: changeWithdrawLiquidity,\n        value: addingLiquidity == false ? liquidityAmount : \"\",\n        approvalNeeded: false,\n        executeFunction: withdrawLiquidity,\n        buttonLabel: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PoolTab, \"/4CC/SZq14/OT3wuN4Cw19M/GHc=\");\n\n_c = PoolTab;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolTab\");","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/PoolTab.jsx"],"names":["ethers","React","useState","useEffect","PoolFormRow","contractName","tokenName","PoolTab","props","tx","writeContracts","liquidityAmount","setLiquidityAmount","addingLiquidity","setAddingLiquidity","addressApproved","setAddressApproved","changeAddLiquidity","value","valuePlusExtra","utils","parseEther","allowance","readContracts","address","lt","changeWithdrawLiquidity","depositLiquidity","console","log","valueInEther","gasLimit","withdrawLiquidity","withdrawTxResult","approveDeposit","approve"],"mappings":"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","sourcesContent":["import { ethers } from \"ethers\";\nimport React, { useState, useEffect } from \"react\";\nimport PoolFormRow from \"./PoolFormRow\";\n\nconst contractName = \"DEX\";\nconst tokenName = \"Balloons\";\n\nexport default function PoolTab(props) {\n\n  const tx = props.tx;\n  const writeContracts = props.writeContracts;\n\n\n  const [liquidityAmount, setLiquidityAmount] = useState(\"\");\n  const [addingLiquidity, setAddingLiquidity] = useState(true);\n  const [addressApproved, setAddressApproved] = useState(true);\n\n  \n\n  const changeAddLiquidity = async value => {\n\n    let valuePlusExtra = ethers.utils.parseEther(\"\" + value * 1.03);\n\n  let allowance = await props.readContracts[tokenName].allowance(\n   props.address,\n       props.readContracts[contractName].address,\n    );\n    setLiquidityAmount(value);\n    setAddingLiquidity(true);\n    if (allowance.lt(valuePlusExtra)) {\n      setAddressApproved(false);\n    } else {\n      setAddressApproved(true);\n    }\n  }\n\n  const changeWithdrawLiquidity = value => {\n      setLiquidityAmount(value);\n      setAddingLiquidity(false);\n   \n      }\n\n  const depositLiquidity = async (value) => {\n   console.log(`Depositing ${liquidityAmount} of liquidity`)\n\n     let valueInEther = ethers.utils.parseEther(\"\" + value);\n \n    await tx(writeContracts[contractName][\"deposit\"]({ value: valueInEther, gasLimit: 200000 }));\n    setLiquidityAmount(\"\");\n    }\n\n \n  \n  const withdrawLiquidity = async (value) => {\n     console.log(`Withdrawing ${liquidityAmount} of liquidity`)\n\n  \n    let valueInEther = ethers.utils.parseEther(\"\" + value);\n     let withdrawTxResult = await tx(writeContracts[contractName][\"withdraw\"](valueInEther));\n     console.log(\"withdrawTxResult:\", withdrawTxResult);\n     setLiquidityAmount(\"\");\n\n  }\n  const approveDeposit = async (value) => {\n\n\n    \n    console.log(`Approving ${liquidityAmount} to be spent`)\n\n    let valuePlusExtra = ethers.utils.parseEther(\"\" + value * 1.03);\n  \n \n   \n     await tx(\n        writeContracts[tokenName].approve(props.readContracts[contractName].address, valuePlusExtra, {\n        gasLimit: 200000,\n        }),\n     );\n     \n\n    setAddressApproved(true);\n  }\n\n  return (\n    <div className=\"simple-ui-card\">\n      \n      <div className=\"form-group\">\n        <div className=\"form-heading\"> Add Liquidity</div>\n        <PoolFormRow\n          changeValueFunction={changeAddLiquidity}\n          value={addingLiquidity == true ? liquidityAmount : \"\"}\n          approvalNeeded={!addressApproved}\n          executeFunction={depositLiquidity}\n          approvalFunction={approveDeposit}\n          buttonLabel={\"Deposit\"}\n        />\n       \n        <div className=\"form-heading\"> Withdraw Liquidity</div>\n\n        <PoolFormRow\n          changeValueFunction={changeWithdrawLiquidity}\n          value={addingLiquidity == false ? liquidityAmount : \"\"}\n          approvalNeeded={false}\n          executeFunction={withdrawLiquidity}\n          buttonLabel={\"Withdraw\"}\n        />\n\n      </div>\n    </div>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}