{"ast":null,"code":"import{useTokenBalance}from\"eth-hooks/erc/erc-20/useTokenBalance\";import{utils}from\"ethers\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SwapFormRow(props){var valueChangeHandler=function valueChangeHandler(e){props.changeValueFunction(e.target.value);};var imgSrc=props.asset==\"ether\"?\"ethlogo.png\":\"ballogo.png\";var imgSymbol=props.asset==\"ether\"?\"ETH\":\"BAL\";var tokenContract=props.contracts&&props.contracts[\"Balloons\"];var balloonsBalance=useTokenBalance(tokenContract,props.address,1777);var ethBalance=props.yourLocalBalance;var balance=props.asset==\"ether\"?ethBalance:balloonsBalance;var floatBalance=parseFloat(\"0.00\");var etherBalance=utils.formatEther(balance);parseFloat(etherBalance).toFixed(2);floatBalance=parseFloat(etherBalance);var displayBalance=floatBalance.toFixed(2);return/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",placeholder:\"0.0\",className:\"swap-row-input\",value:props.value,onChange:function onChange(e){return valueChangeHandler(e);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"swap-row-right-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"swap-row-dropdown\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"currency-img\",children:/*#__PURE__*/_jsx(\"img\",{src:\"../../images/\".concat(imgSrc),height:\"20px\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"currency-symbol\",children:imgSymbol})]}),/*#__PURE__*/_jsx(\"div\",{className:\"swap-row-balance\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Balance: \",displayBalance]})})]})]});}","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/SwapFormRow.jsx"],"names":["useTokenBalance","utils","SwapFormRow","props","valueChangeHandler","e","changeValueFunction","target","value","imgSrc","asset","imgSymbol","tokenContract","contracts","balloonsBalance","address","ethBalance","yourLocalBalance","balance","floatBalance","parseFloat","etherBalance","formatEther","toFixed","displayBalance"],"mappings":"AAAA,OAASA,eAAT,KAAgC,sCAAhC,CACA,OAASC,KAAT,KAAsB,QAAtB,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACzC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,CAAC,CAAI,CAC9BF,KAAK,CAACG,mBAAN,CAA0BD,CAAC,CAACE,MAAF,CAASC,KAAnC,EACD,CAFD,CAIA,GAAMC,CAAAA,MAAM,CAAGN,KAAK,CAACO,KAAN,EAAe,OAAf,CAAyB,aAAzB,CAAyC,aAAxD,CACA,GAAMC,CAAAA,SAAS,CAAGR,KAAK,CAACO,KAAN,EAAe,OAAf,CAAyB,KAAzB,CAAiC,KAAnD,CAEA,GAAME,CAAAA,aAAa,CAAGT,KAAK,CAACU,SAAN,EAAmBV,KAAK,CAACU,SAAN,CAAgB,UAAhB,CAAzC,CACA,GAAMC,CAAAA,eAAe,CAAGd,eAAe,CAACY,aAAD,CAAgBT,KAAK,CAACY,OAAtB,CAA+B,IAA/B,CAAvC,CACA,GAAMC,CAAAA,UAAU,CAAGb,KAAK,CAACc,gBAAzB,CAEA,GAAMC,CAAAA,OAAO,CAAGf,KAAK,CAACO,KAAN,EAAe,OAAf,CAAyBM,UAAzB,CAAsCF,eAAtD,CAEA,GAAIK,CAAAA,YAAY,CAAGC,UAAU,CAAC,MAAD,CAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAGpB,KAAK,CAACqB,WAAN,CAAkBJ,OAAlB,CAArB,CACAE,UAAU,CAACC,YAAD,CAAV,CAAyBE,OAAzB,CAAiC,CAAjC,EACAJ,YAAY,CAAGC,UAAU,CAACC,YAAD,CAAzB,CACA,GAAMG,CAAAA,cAAc,CAAGL,YAAY,CAACI,OAAb,CAAqB,CAArB,CAAvB,CAEA,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,cACE,IAAI,CAAC,QADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,KAHd,CAIE,SAAS,CAAC,gBAJZ,CAKE,KAAK,CAAEpB,KAAK,CAACK,KALf,CAME,QAAQ,CAAE,kBAAAH,CAAC,QAAID,CAAAA,kBAAkB,CAACC,CAAD,CAAtB,EANb,EADF,cASE,aAAK,SAAS,CAAC,sBAAf,wBAEE,aAAK,SAAS,CAAC,mBAAf,wBACE,YAAK,SAAS,CAAC,cAAf,uBACE,YAAK,GAAG,wBAAkBI,MAAlB,CAAR,CAAoC,MAAM,CAAC,MAA3C,EADF,EADF,cAIE,YAAK,SAAS,CAAC,iBAAf,UAAkCE,SAAlC,EAJF,GAFF,cAQE,YAAK,SAAS,CAAC,kBAAf,uBACE,iCAAaa,cAAb,GADF,EARF,GATF,GADF,CAwBD","sourcesContent":["import { useTokenBalance } from \"eth-hooks/erc/erc-20/useTokenBalance\";\nimport { utils } from \"ethers\";\n\nexport default function SwapFormRow(props) {\n  const valueChangeHandler = e => {\n    props.changeValueFunction(e.target.value);\n  };\n\n  const imgSrc = props.asset == \"ether\" ? \"ethlogo.png\" : \"ballogo.png\";\n  const imgSymbol = props.asset == \"ether\" ? \"ETH\" : \"BAL\";\n\n  const tokenContract = props.contracts && props.contracts[\"Balloons\"];\n  const balloonsBalance = useTokenBalance(tokenContract, props.address, 1777);\n  const ethBalance = props.yourLocalBalance;\n\n  const balance = props.asset == \"ether\" ? ethBalance : balloonsBalance;\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  const etherBalance = utils.formatEther(balance);\n  parseFloat(etherBalance).toFixed(2);\n  floatBalance = parseFloat(etherBalance);\n  const displayBalance = floatBalance.toFixed(2);\n\n  return (\n    <div className=\"form-row\">\n      <input\n        type=\"number\"\n        step=\"0.01\"\n        placeholder=\"0.0\"\n        className=\"swap-row-input\"\n        value={props.value}\n        onChange={e => valueChangeHandler(e)}\n      ></input>\n      <div className=\"swap-row-right-group\">\n        \n        <div className=\"swap-row-dropdown\">\n          <div className=\"currency-img\">\n            <img src={`../../images/${imgSrc}`} height=\"20px\" />\n          </div>\n          <div className=\"currency-symbol\">{imgSymbol}</div>\n        </div>\n        <div className=\"swap-row-balance\">\n          <p>Balance: {displayBalance}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}