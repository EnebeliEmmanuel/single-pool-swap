{"ast":null,"code":"var _jsxFileName = \"/home/kokocodes/single-pool-dex/packages/react-app/src/components/SwapFormRow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTokenBalance } from \"eth-hooks/erc/erc-20/useTokenBalance\";\nimport { utils } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SwapFormRow(props) {\n  _s();\n\n  const valueChangeHandler = e => {\n    props.changeValueFunction(e.target.value);\n  };\n\n  const imgSrc = props.asset == \"ether\" ? \"ethlogo.png\" : \"ballogo.png\";\n  const imgSymbol = props.asset == \"ether\" ? \"ETH\" : \"BAL\";\n  const tokenContract = props.contracts && props.contracts[\"Balloons\"];\n  const balloonsBalance = useTokenBalance(tokenContract, props.address, 1777);\n  const ethBalance = props.yourLocalBalance;\n  const balance = props.asset == \"ether\" ? ethBalance : balloonsBalance;\n  let floatBalance = parseFloat(\"0.00\");\n  const etherBalance = utils.formatEther(balance);\n  parseFloat(etherBalance).toFixed(2);\n  floatBalance = parseFloat(etherBalance);\n  const displayBalance = floatBalance.toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      placeholder: \"0.0\",\n      className: \"swap-row-input\",\n      value: props.value,\n      onChange: e => valueChangeHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swap-row-right-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swap-row-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currency-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `../../images/${imgSrc}`,\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currency-symbol\",\n          children: imgSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swap-row-balance\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", displayBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SwapFormRow, \"5NA0lIfUDox3CvAsLLTy9CvaWMs=\", false, function () {\n  return [useTokenBalance];\n});\n\n_c = SwapFormRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapFormRow\");","map":{"version":3,"sources":["/home/kokocodes/single-pool-dex/packages/react-app/src/components/SwapFormRow.jsx"],"names":["useTokenBalance","utils","SwapFormRow","props","valueChangeHandler","e","changeValueFunction","target","value","imgSrc","asset","imgSymbol","tokenContract","contracts","balloonsBalance","address","ethBalance","yourLocalBalance","balance","floatBalance","parseFloat","etherBalance","formatEther","toFixed","displayBalance"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,sCAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,kBAAkB,GAAGC,CAAC,IAAI;AAC9BF,IAAAA,KAAK,CAACG,mBAAN,CAA0BD,CAAC,CAACE,MAAF,CAASC,KAAnC;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAGN,KAAK,CAACO,KAAN,IAAe,OAAf,GAAyB,aAAzB,GAAyC,aAAxD;AACA,QAAMC,SAAS,GAAGR,KAAK,CAACO,KAAN,IAAe,OAAf,GAAyB,KAAzB,GAAiC,KAAnD;AAEA,QAAME,aAAa,GAAGT,KAAK,CAACU,SAAN,IAAmBV,KAAK,CAACU,SAAN,CAAgB,UAAhB,CAAzC;AACA,QAAMC,eAAe,GAAGd,eAAe,CAACY,aAAD,EAAgBT,KAAK,CAACY,OAAtB,EAA+B,IAA/B,CAAvC;AACA,QAAMC,UAAU,GAAGb,KAAK,CAACc,gBAAzB;AAEA,QAAMC,OAAO,GAAGf,KAAK,CAACO,KAAN,IAAe,OAAf,GAAyBM,UAAzB,GAAsCF,eAAtD;AAEA,MAAIK,YAAY,GAAGC,UAAU,CAAC,MAAD,CAA7B;AAEA,QAAMC,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CAAkBJ,OAAlB,CAArB;AACAE,EAAAA,UAAU,CAACC,YAAD,CAAV,CAAyBE,OAAzB,CAAiC,CAAjC;AACAJ,EAAAA,YAAY,GAAGC,UAAU,CAACC,YAAD,CAAzB;AACA,QAAMG,cAAc,GAAGL,YAAY,CAACI,OAAb,CAAqB,CAArB,CAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,KAHd;AAIE,MAAA,SAAS,EAAC,gBAJZ;AAKE,MAAA,KAAK,EAAEpB,KAAK,CAACK,KALf;AAME,MAAA,QAAQ,EAAEH,CAAC,IAAID,kBAAkB,CAACC,CAAD;AANnC;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAK,YAAA,GAAG,EAAG,gBAAeI,MAAO,EAAjC;AAAoC,YAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBAAkCE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA,kCAAaa,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7CuBtB,W;UASEF,e;;;KATFE,W","sourcesContent":["import { useTokenBalance } from \"eth-hooks/erc/erc-20/useTokenBalance\";\nimport { utils } from \"ethers\";\n\nexport default function SwapFormRow(props) {\n  const valueChangeHandler = e => {\n    props.changeValueFunction(e.target.value);\n  };\n\n  const imgSrc = props.asset == \"ether\" ? \"ethlogo.png\" : \"ballogo.png\";\n  const imgSymbol = props.asset == \"ether\" ? \"ETH\" : \"BAL\";\n\n  const tokenContract = props.contracts && props.contracts[\"Balloons\"];\n  const balloonsBalance = useTokenBalance(tokenContract, props.address, 1777);\n  const ethBalance = props.yourLocalBalance;\n\n  const balance = props.asset == \"ether\" ? ethBalance : balloonsBalance;\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  const etherBalance = utils.formatEther(balance);\n  parseFloat(etherBalance).toFixed(2);\n  floatBalance = parseFloat(etherBalance);\n  const displayBalance = floatBalance.toFixed(2);\n\n  return (\n    <div className=\"form-row\">\n      <input\n        type=\"number\"\n        step=\"0.01\"\n        placeholder=\"0.0\"\n        className=\"swap-row-input\"\n        value={props.value}\n        onChange={e => valueChangeHandler(e)}\n      ></input>\n      <div className=\"swap-row-right-group\">\n        \n        <div className=\"swap-row-dropdown\">\n          <div className=\"currency-img\">\n            <img src={`../../images/${imgSrc}`} height=\"20px\" />\n          </div>\n          <div className=\"currency-symbol\">{imgSymbol}</div>\n        </div>\n        <div className=\"swap-row-balance\">\n          <p>Balance: {displayBalance}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}